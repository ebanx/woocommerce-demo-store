{"laborator_custom_css":"\/* CUSTOM MODIFICATION BY LABORATOR FOR LANDING DEMO - START *\/\r\nbody {\r\n\tfont-size: 20px;\r\n}\r\n\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li>a, .main-header.menu-type-standard-menu .standard-menu-container ul.menu>li>a {\r\n\tfont-size: 20px;\r\n}\r\n\r\n\/* Menu underline animation height *\/\r\n.main-header.menu-type-standard-menu .standard-menu-container div.menu>ul>li>a:after, .main-header.menu-type-standard-menu .standard-menu-container ul.menu>li>a:after {\r\n\theight: 2px;\r\n}\r\n\r\n.centered {\r\n\ttext-align: center;\t\r\n}\r\n\r\n.feature-block {\r\n\ttext-align: center;\r\n}\r\n\r\n.feature-block h2 {\r\n\tfont-size: 30px ;\r\n}\r\n\r\n.feature-block p {\r\n\tfont-size: 20px ;\r\n}\r\n\r\n.weather-icons h2 {\r\n    font-size: 44px !important;\r\n}\r\n\r\n.title h2 {\r\n\tfont-size: 64px;\r\n}\r\n\r\n.title p {\r\n\tfont-size: 30px;\r\n}\r\n\r\n\/* Get the app button on menu *\/\r\n.get-the-app a {\r\n    background: #fff;\r\n    color: #858a99 !important;\r\n    border-radius: 50px;\r\n    padding: 4px 15px;\r\n}\r\n\r\n.get-the-app a:hover {\r\n\tbox-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n\ttransition: box-shadow all 300ms;\r\n}\r\n\r\n.get-the-app a:after {\r\n    display: none;\r\n}\r\n\r\n\/* Overview section *\/\r\n#overview {\r\n\tpadding: 50px 0;\t\r\n}\r\n\r\n\/* Features section *\/\r\n#features {\r\n\tpadding: 40px 0;\t\r\n}\r\n\r\n#features .section-title {\r\n\tpadding: 20px 0px 40px 0px;\t\r\n}\r\n\r\n#features img.attachment-full {\r\n\twidth: 25%;\r\n}\r\n\r\n\/* Unique Icons section *\/\r\n@media screen and (min-width: 991px) {\r\n    .unique-icons-section-holder {\r\n        padding-left: 100px !important;\r\n    }\r\n}\r\n\r\n.weather-icons  h2 {\r\n\tfont-size: 54px;\t\r\n}\r\n\r\n.weather-icons h3  {\r\n\tline-height: 44px;\r\n}\r\n\r\n.weather-icons p {\r\n\tfont-size: 29px;\t\r\n}\r\n\r\n.weather-icons h3 img {\r\n\twidth: 44px;\r\n\tmargin-right: 20px;\r\n\tfloat: left;\r\n}\r\n\r\n\/* Compatibility section *\/\r\n#compatibility .title h2 {\r\n\tfont-size: 52px;\r\n}\r\n\r\n#compatibility .title p {\r\n\tfont-size: 21px;\r\n}\r\n\r\n#compatibility img.attachment-full {\r\n\twidth: 50%;\r\n}\r\n\r\n\/* Get a Copy section - Download buttons *\/\r\n#get-a-copy {\r\n\tbackground-size: 142px;\r\n}\r\n\r\n#get-a-copy h2 {\r\n\tfont-size: 35px;\r\n}\r\n\r\n.main-header.is-sticky.sticky-fixed .get-the-app a {\r\n    background: #2078dc;\r\n    color: #fff !important;\r\n}\r\n\r\n#get-a-copy .phones img {\r\n\twidth: 423px;\r\n\theight: 485px;\r\n}\r\n\r\n#get-a-copy .app-store img {\r\n\twidth: auto;\r\n\theight: 53px !important;\r\n\tfloat: left;\r\n\tmargin-right: 20px\r\n}\r\n\r\n.app-store {\r\n\tpadding-top: 185px;\t\r\n}\r\n\r\n.app-store a:after {\r\n\tdisplay: none;\t\r\n}\r\n\r\n\/* Footer text *\/\r\n.main-footer .footer-links p {\r\n    font-size: 18px;\r\n}\r\n\r\n\/* Single Blog area *\/\r\n.post-formatting .wp-caption .wp-caption-text {\r\n    background: #eee;\r\n    font-size: 14px !important;\r\n    color: #000 !important;\r\n}\r\n\r\n.message-form .form-group .placeholder {\r\n    padding-top: 1px;\r\n}\r\n\r\n\/* Go to top margin modification *\/\r\n.go-to-top {\r\n    margin: 35px;\r\n}\r\n\r\n\/* Mobile Active Menu *\/\r\n.mobile-menu-wrapper .mobile-menu-container div.menu ul>li.current-menu-item>a, \r\n.mobile-menu-wrapper .mobile-menu-container ul.menu li.current-menu-item>a {\r\n    color: #1675df;\r\n}\r\n\/* CUSTOM MODIFICATION BY LABORATOR FOR LANDING DEMO - END *\/\r\n\r\n\/* USER CUSTOM CSS CODE :START *\/","laborator_custom_css_lg":".title h2, .unique-icons-section h2, #compatibility .title h2  {\r\n\tfont-size: 30px;\r\n}\r\n\r\n.title p, .unique-icons-section p, #compatibility .title p {\r\n\tfont-size: 22px;\r\n}\r\n\r\n.unique-icons-section h3 {\r\n\tfont-size: 22px;\r\n}\r\n\r\n.app-store {\r\n\ttext-align: center;\t\r\n\tpadding-top: 50px;\r\n}\r\n\r\n.phones {\r\n\tdisplay: none;\t\r\n}\r\n\r\n#overview {\r\n\tpadding: 10px 0;\t\r\n}\r\n\r\n#overview img {\r\n\tmargin-top: 10px;\r\n}\r\n\r\n#overview .section-title {\r\n\tmargin-bottom: 30px;\t\r\n}\r\n\r\n#features {\r\n\tpadding: 10px 0;\t\r\n}\r\n\r\n#features .section-title {\r\n\tpadding: 0;\t\r\n}\r\n\r\n\r\n.feature-block h2 {\r\n    font-size: 20px;\r\n}\r\n\r\n.feature-block p {\r\n    font-size: 18px;\r\n}","laborator_custom_css_md":".devices {\r\n    margin-top: 70px;\t\r\n}\r\n\r\n.feature-block h2 {\r\n    font-size: 30px;\r\n}\r\n\r\n.feature-block p {\r\n    font-size: 20px;\r\n}","laborator_custom_css_sm":".devices {\r\n    margin-top: 150px;\t\r\n}\r\n\r\n.feature-block h2 {\r\n    font-size: 20px;\r\n}\r\n\r\n.feature-block p {\r\n    font-size: 18px;\r\n}","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}